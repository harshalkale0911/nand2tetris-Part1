// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/b/RAM512.hdl
/**
 * Memory of 512 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Address lines
    addressHigh = address[6..8]; // High 3 bits (to select RAM64)
    addressLow = address[0..5];   // Low 6 bits (to select register in RAM64)

    // Demultiplexer to select which RAM64 chip to use
    DMux8Way(
        in=load, 
        sel=addressHigh, 
        a=load0, load1, load2, load3, load4, load5, load6, load7
    );

    // Eight RAM64 chips
    RAM64(
        in=in, 
        load=load0, 
        address=addressLow, 
        out=out0
    );
    RAM64(
        in=in, 
        load=load1, 
        address=addressLow, 
        out=out1
    );
    RAM64(
        in=in, 
        load=load2, 
        address=addressLow, 
        out=out2
    );
    RAM64(
        in=in, 
        load=load3, 
        address=addressLow, 
        out=out3
    );
    RAM64(
        in=in, 
        load=load4, 
        address=addressLow, 
        out=out4
    );
    RAM64(
        in=in, 
        load=load5, 
        address=addressLow, 
        out=out5
    );
    RAM64(
        in=in, 
        load=load6, 
        address=addressLow, 
        out=out6
    );
    RAM64(
        in=in, 
        load=load7, 
        address=addressLow, 
        out=out7
    );

    // Multiplexer to select the output from the selected RAM64
    Mux8Way16(
        in0=out0, 
        in1=out1, 
        in2=out2, 
        in3=out3, 
        in4=out4, 
        in5=out5, 
        in6=out6, 
        in7=out7, 
        sel=addressHigh, 
        out=out
    );
}
